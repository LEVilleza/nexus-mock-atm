//Java AWT Imports
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

//Java Swing Imports
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.JOptionPane;

//Java Text Imports
import java.text.DateFormat;
import java.text.SimpleDateFormat;

//Java Util Imports
import java.util.Date;
import java.util.Arrays;
import java.util.Random;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Maryann
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    
    //Global Object Declaration
    private final Database dataobj=new Database();//connects to database
    
    //Global Declaration & Initialization
    int accnumIndex;
    double totalwith,totaldep,totaltrans;
    double bal=0.00;
    String transactionType="";
    
    
    //Method to generate receipt
    public final void CreateReceipt(double amt, int index){
        //Object Declaration and Initialization
        Random rand=new Random();
        DateFormat dtf=new SimpleDateFormat("dd/MM/yyyy hh:mm");
        Date dt=new Date();
        String date=dtf.format(dt);

        
        String letters="ABCDEFGHIJKLMNOPQRSTUVWXYZ";//String 
        String numbers="1234567890";
        char[] code={'-','-','-','-','-','-','-','-','-','-'};

        int random;

        for(int j=0;j<code.length;j++){
            random=rand.nextInt(2);
            switch(random){
                case 0:
                    code[j]=letters.charAt(rand.nextInt(letters.length()));
                    break;
                case 1:
                    code[j]=numbers.charAt(rand.nextInt(numbers.length()));
                    break;
            }



        }

        String receipt="------------------------[NEXUS]------------------------";
        receipt+="\n\nTRANSACTION NUMBER: "+Arrays.toString(code).replace(",", "").replace("[", "").replace("]", "").replace(" ", "");
        receipt+="\n\nTRANSACTION DATE: "+date;
        
        receipt+="\n\n"+String.format("%60s", "").replace(" ", "-");
        receipt+="\n        TRANSACTION TYPE: "+transactionType.toUpperCase();
        receipt+="\n"+String.format("%60s", "").replace(" ", "-");
        receipt+="\nACCOUNT NUMBER: ****"+dataobj.details_table.getValueAt(accnumIndex,1).toString().substring(4);
        receipt+="\n\nCUSTOMER NAME: "+dataobj.details_table.getValueAt(accnumIndex,0).toString();
        
        receipt+="\n\n"+transactionType.toUpperCase()+" AMOUNT: \u00A3"+String.format("%.2f",amt);
        if(transactionType.equals("TRANSFER")){
            receipt+="\n\nTRANSFER TO (ACCNUM): ****"+dataobj.details_table.getValueAt(index,1).toString().substring(4);
        }
        
        receipt+="\n\nBALANCE: \u00A3"+String.format("%.2f",bal);
        
        
        
        
        JOptionPane.showMessageDialog(this, receipt,"Receipt",JOptionPane.PLAIN_MESSAGE);
    }
    
    
    public Home(int foundindex) {
        //Frame Initialization
        initComponents();
        setTitle("Home");
        setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        
        //Set Logo
        logo_label.setIcon(dataobj.CreateIcon(logo_label));
        
        //Hide Popup Elements
        loading_label.setVisible(false);
        loading_bar.setVisible(false);
        button_panel.setVisible(false);
        
        //Change Progress Bar color to match color scheme
        UIManager UI=new UIManager();
        UI.put("ProgressBar.background",new Color(115,115,115));
        UI.put("nimbusOrange",new Color(105,54,158));
        
        accnumIndex=foundindex;
        
        header_label.setText("Welcome, "+dataobj.details_table.getValueAt(foundindex, 0)+"!");//Personalized Welcome Header
        bal_label.setText("Balance: \u00A3"+dataobj.details_table.getValueAt(foundindex, 4));//Retrieve User Balance
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header_panel = new javax.swing.JPanel();
        header_label = new javax.swing.JLabel();
        subheader_label = new javax.swing.JLabel();
        logo_label = new javax.swing.JLabel();
        body_panel = new javax.swing.JPanel();
        withdraw_button = new javax.swing.JButton();
        atm_panel = new javax.swing.JPanel();
        atm_image = new javax.swing.JLabel();
        atmscreen_panel = new javax.swing.JPanel();
        bal_label = new javax.swing.JLabel();
        exit_button = new javax.swing.JButton();
        loading_bar = new javax.swing.JProgressBar();
        loading_label = new javax.swing.JLabel();
        deposit_button = new javax.swing.JButton();
        transfer_button = new javax.swing.JButton();
        button_panel = new javax.swing.JPanel();
        amount_button1 = new javax.swing.JButton();
        amount_button2 = new javax.swing.JButton();
        amount_button3 = new javax.swing.JButton();
        amount_button4 = new javax.swing.JButton();
        amount_button5 = new javax.swing.JButton();
        amount_button6 = new javax.swing.JButton();
        confirmamt_button = new javax.swing.JButton();
        amt_field = new javax.swing.JTextField();
        transType_label = new javax.swing.JLabel();
        currency_combo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        header_panel.setBackground(new java.awt.Color(105, 54, 158));

        header_label.setFont(new java.awt.Font("Corbel", 1, 36)); // NOI18N
        header_label.setForeground(new java.awt.Color(204, 204, 204));
        header_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header_label.setText("Home");

        subheader_label.setFont(new java.awt.Font("Corbel", 1, 18)); // NOI18N
        subheader_label.setForeground(new java.awt.Color(204, 204, 204));
        subheader_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subheader_label.setText("Please Select an Option");

        javax.swing.GroupLayout header_panelLayout = new javax.swing.GroupLayout(header_panel);
        header_panel.setLayout(header_panelLayout);
        header_panelLayout.setHorizontalGroup(
            header_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header_panelLayout.createSequentialGroup()
                .addComponent(logo_label, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(header_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(header_panelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(subheader_label, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(header_label, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        header_panelLayout.setVerticalGroup(
            header_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(header_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(subheader_label))
            .addComponent(logo_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        body_panel.setBackground(new java.awt.Color(115, 115, 115));
        body_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        withdraw_button.setBackground(new java.awt.Color(121, 81, 168));
        withdraw_button.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        withdraw_button.setForeground(new java.awt.Color(35, 35, 35));
        withdraw_button.setText("WITHDRAW");
        withdraw_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdraw_buttonActionPerformed(evt);
            }
        });
        body_panel.add(withdraw_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 12, 210, 34));

        atm_panel.setBackground(new java.awt.Color(115, 115, 115));
        atm_panel.setPreferredSize(new java.awt.Dimension(247, 361));
        atm_panel.setLayout(null);

        atm_image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atm.png"))); // NOI18N
        atm_panel.add(atm_image);
        atm_image.setBounds(10, 0, 247, 374);

        atmscreen_panel.setBackground(new java.awt.Color(51, 51, 51));

        bal_label.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        bal_label.setForeground(new java.awt.Color(204, 204, 204));
        bal_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bal_label.setText("Balance: ");

        javax.swing.GroupLayout atmscreen_panelLayout = new javax.swing.GroupLayout(atmscreen_panel);
        atmscreen_panel.setLayout(atmscreen_panelLayout);
        atmscreen_panelLayout.setHorizontalGroup(
            atmscreen_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(atmscreen_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bal_label, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                .addContainerGap())
        );
        atmscreen_panelLayout.setVerticalGroup(
            atmscreen_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(atmscreen_panelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(bal_label)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        atm_panel.add(atmscreen_panel);
        atmscreen_panel.setBounds(70, 60, 130, 80);

        body_panel.add(atm_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 255, -1));

        exit_button.setBackground(new java.awt.Color(121, 81, 168));
        exit_button.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        exit_button.setForeground(new java.awt.Color(35, 35, 35));
        exit_button.setText("REMOVE CARD");
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });
        body_panel.add(exit_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 210, 34));

        loading_bar.setForeground(new java.awt.Color(35, 35, 35));
        body_panel.add(loading_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 210, -1));

        loading_label.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        loading_label.setForeground(new java.awt.Color(35, 35, 35));
        loading_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loading_label.setText("Removing Card...");
        body_panel.add(loading_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 153, -1));

        deposit_button.setBackground(new java.awt.Color(121, 81, 168));
        deposit_button.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        deposit_button.setForeground(new java.awt.Color(35, 35, 35));
        deposit_button.setText("DEPOSIT");
        deposit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deposit_buttonActionPerformed(evt);
            }
        });
        body_panel.add(deposit_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 64, 210, 34));

        transfer_button.setBackground(new java.awt.Color(121, 81, 168));
        transfer_button.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        transfer_button.setForeground(new java.awt.Color(35, 35, 35));
        transfer_button.setText("TRANSFER");
        transfer_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transfer_buttonActionPerformed(evt);
            }
        });
        body_panel.add(transfer_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 116, 210, 34));

        button_panel.setBackground(new java.awt.Color(51, 51, 51));

        amount_button1.setBackground(new java.awt.Color(152, 152, 152));
        amount_button1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        amount_button1.setForeground(new java.awt.Color(35, 35, 35));
        amount_button1.setText("10");
        amount_button1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        amount_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amount_button1ActionPerformed(evt);
            }
        });

        amount_button2.setBackground(new java.awt.Color(152, 152, 152));
        amount_button2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        amount_button2.setForeground(new java.awt.Color(35, 35, 35));
        amount_button2.setText("20");
        amount_button2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        amount_button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amount_button2ActionPerformed(evt);
            }
        });

        amount_button3.setBackground(new java.awt.Color(152, 152, 152));
        amount_button3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        amount_button3.setForeground(new java.awt.Color(35, 35, 35));
        amount_button3.setText("50");
        amount_button3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        amount_button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amount_button3ActionPerformed(evt);
            }
        });

        amount_button4.setBackground(new java.awt.Color(152, 152, 152));
        amount_button4.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        amount_button4.setForeground(new java.awt.Color(35, 35, 35));
        amount_button4.setText("100");
        amount_button4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        amount_button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amount_button4ActionPerformed(evt);
            }
        });

        amount_button5.setBackground(new java.awt.Color(152, 152, 152));
        amount_button5.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        amount_button5.setForeground(new java.awt.Color(35, 35, 35));
        amount_button5.setText("200");
        amount_button5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        amount_button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amount_button5ActionPerformed(evt);
            }
        });

        amount_button6.setBackground(new java.awt.Color(152, 152, 152));
        amount_button6.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        amount_button6.setForeground(new java.awt.Color(35, 35, 35));
        amount_button6.setText("250");
        amount_button6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        amount_button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amount_button6ActionPerformed(evt);
            }
        });

        confirmamt_button.setBackground(new java.awt.Color(152, 152, 152));
        confirmamt_button.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        confirmamt_button.setForeground(new java.awt.Color(35, 35, 35));
        confirmamt_button.setText("Enter");
        confirmamt_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmamt_buttonActionPerformed(evt);
            }
        });

        amt_field.setBackground(new java.awt.Color(152, 152, 152));

        transType_label.setFont(new java.awt.Font("Corbel", 1, 11)); // NOI18N
        transType_label.setForeground(new java.awt.Color(204, 204, 204));
        transType_label.setText("transactionType");

        currency_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "£", "€" }));

        javax.swing.GroupLayout button_panelLayout = new javax.swing.GroupLayout(button_panel);
        button_panel.setLayout(button_panelLayout);
        button_panelLayout.setHorizontalGroup(
            button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, button_panelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transType_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(button_panelLayout.createSequentialGroup()
                        .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(button_panelLayout.createSequentialGroup()
                                .addComponent(currency_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(amt_field, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(button_panelLayout.createSequentialGroup()
                                .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(amount_button4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amount_button1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(amount_button5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amount_button2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)))
                        .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confirmamt_button, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(button_panelLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(amount_button3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amount_button6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(12, 12, 12)))
                .addContainerGap())
        );
        button_panelLayout.setVerticalGroup(
            button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, button_panelLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(transType_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amount_button1)
                    .addComponent(amount_button2)
                    .addComponent(amount_button3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amount_button4)
                    .addComponent(amount_button5)
                    .addComponent(amount_button6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(button_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amt_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmamt_button)
                    .addComponent(currency_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        body_panel.add(button_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 210, 150));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(body_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(body_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void withdraw_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdraw_buttonActionPerformed
        // TODO add your handling code here:
        
        //
        transactionType=withdraw_button.getText();
        transType_label.setText(transactionType);
        button_panel.setVisible(true);
    }//GEN-LAST:event_withdraw_buttonActionPerformed

    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed
        // TODO add your handling code here:
        loading_label.setVisible(true);
        loading_bar.setVisible(true);
        
        final Timer t = new Timer(50, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                loading_bar.setValue(loading_bar.getValue() + 10);
                if (loading_bar.getValue() == 100) {
                    ((Timer) e.getSource()).stop();
                    new Welcome().setVisible(true);
                    dispose();
                    
                }
            }
        });
        t.start();
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_exit_buttonActionPerformed

    private void deposit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deposit_buttonActionPerformed
        // TODO add your handling code here:
        transactionType=deposit_button.getText();
        transType_label.setText(transactionType);
        button_panel.setVisible(true);
    }//GEN-LAST:event_deposit_buttonActionPerformed

    private void transfer_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transfer_buttonActionPerformed
        // TODO add your handling code here:
        transactionType=transfer_button.getText();
        transType_label.setText(transactionType);
        button_panel.setVisible(true);
    }//GEN-LAST:event_transfer_buttonActionPerformed

    private void amount_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amount_button1ActionPerformed
        // TODO add your handling code here:
        amt_field.setText(amount_button1.getText());
    }//GEN-LAST:event_amount_button1ActionPerformed

    private void amount_button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amount_button2ActionPerformed
        // TODO add your handling code here:
        amt_field.setText(amount_button2.getText());
    }//GEN-LAST:event_amount_button2ActionPerformed

    private void amount_button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amount_button3ActionPerformed
        // TODO add your handling code here:
        amt_field.setText(amount_button3.getText());
    }//GEN-LAST:event_amount_button3ActionPerformed

    private void amount_button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amount_button4ActionPerformed
        // TODO add your handling code here:
        amt_field.setText(amount_button4.getText());
    }//GEN-LAST:event_amount_button4ActionPerformed

    private void amount_button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amount_button5ActionPerformed
        // TODO add your handling code here:
        amt_field.setText(amount_button5.getText());
    }//GEN-LAST:event_amount_button5ActionPerformed

    private void amount_button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amount_button6ActionPerformed
        // TODO add your handling code here:
        amt_field.setText(amount_button6.getText());
    }//GEN-LAST:event_amount_button6ActionPerformed

    private void confirmamt_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmamt_buttonActionPerformed
        // TODO add your handling code here:
        boolean amtValid=true,isEuro=currency_combo.getSelectedIndex()==2;
        int amt=0;
        double convamt=0;
        
        //Amount Validation
        if(amt_field.getText().isBlank()){//Checks if empty
            JOptionPane.showMessageDialog(this,"Invalid Input: Missing Value");
            amtValid=false;
        }
        else if(currency_combo.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(this,"Please select a currency");
            amtValid=false;
        }
        else{
            try{
                amt=Integer.parseInt(amt_field.getText());//Checks if integer
                if(isEuro){
                    convamt=amt*0.85;
                }
                if(!(amt%10==0)){
                    JOptionPane.showMessageDialog(this,"Invalid Input: Must be a multiple of 10");
                    amtValid=false;
                }
                else if(amt>250||convamt>250){
                    JOptionPane.showMessageDialog(this,"The maximum daily transaction limit is \u00A3250.00");
                    amtValid=false;
                }
                else if(amt<0){
                    JOptionPane.showMessageDialog(this,"Invalid Input: Must be positive");
                    amtValid=false;
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this,"Invalid Input: Must be numeric");
                amtValid=false;
            }
        }
        
        if(amtValid){
            switch(transactionType){
                case "WITHDRAW":
                    bal=Double.parseDouble(dataobj.details_table.getValueAt(accnumIndex, 4).toString());
                    
                    totalwith=Double.parseDouble(dataobj.dailytrans_table.getValueAt(accnumIndex, 1).toString());
                    
                    
                    if(totalwith+amt>250||totalwith+convamt>250){
                        JOptionPane.showMessageDialog(this,"The maximum daily transaction limit is \u00A3250.00");
                    }else if(amt>bal||convamt>bal){
                        JOptionPane.showMessageDialog(this,"Invalid Input: Not enough balance!");
                    }else{
                        if(isEuro)bal-=convamt;
                        else bal-=amt;
                        
                        JOptionPane.showMessageDialog(this, "Transaction Successful!");
                        if(isEuro)totalwith+=convamt;
                        else totalwith+=amt;


                        //Update Tables
                        dataobj.details_table.setValueAt(bal, accnumIndex, 4);
                        
                        if(isEuro)dataobj.totaltrans_table.setValueAt(Double.parseDouble(dataobj.totaltrans_table.getValueAt(accnumIndex,1).toString())+convamt, accnumIndex, 1);
                        else dataobj.totaltrans_table.setValueAt(Double.parseDouble(dataobj.totaltrans_table.getValueAt(accnumIndex,1).toString())+amt, accnumIndex, 1);
                        
                        dataobj.dailytrans_table.setValueAt(totalwith, accnumIndex, 1);

                        if(JOptionPane.showConfirmDialog(this, "Would you like a receipt?", "Receipt Confirmation", JOptionPane.YES_NO_OPTION)==0){
                            if(isEuro){
                                CreateReceipt(convamt,-1);
                            }
                            else{
                                CreateReceipt(amt,-1);
                            }
                            
                        }
                        
                        bal_label.setText("Balance: \u00A3"+String.format("%.2f",bal));
                        //
                        
                    }
                    
                    
                    
                    break;
                case "DEPOSIT":
                    bal=Double.parseDouble(dataobj.details_table.getValueAt(accnumIndex, 4).toString());
                    
                    
                    totaldep=Double.parseDouble(dataobj.dailytrans_table.getValueAt(accnumIndex, 2).toString());
                    
                    if(totaldep+amt>250||totalwith+convamt>250){
                        JOptionPane.showMessageDialog(this,"The maximum daily transaction limit is \u00A3250");
                    }
                    else{
                        if(isEuro) bal+=convamt;
                        else bal+=amt;
                        
                        JOptionPane.showMessageDialog(this, "Transaction Successful!");
                        
                        if(isEuro) totaldep+=convamt;
                        else totaldep+=amt;

                        //Update Table
                        dataobj.details_table.setValueAt(bal, accnumIndex, 4);
                        
                        if(isEuro)dataobj.totaltrans_table.setValueAt(Double.parseDouble(dataobj.totaltrans_table.getValueAt(accnumIndex,1).toString())+convamt, accnumIndex, 2);
                        else dataobj.totaltrans_table.setValueAt(Double.parseDouble(dataobj.totaltrans_table.getValueAt(accnumIndex,1).toString())+amt, accnumIndex, 2);
                        
                        dataobj.dailytrans_table.setValueAt(totaldep, accnumIndex, 2);
                        
                        
                        if(JOptionPane.showConfirmDialog(this, "Would you like a receipt?", "Receipt Confirmation", JOptionPane.YES_NO_OPTION)==0){
                            if(isEuro){
                                CreateReceipt(convamt,-1);
                            }
                            else{
                                CreateReceipt(amt,-1);
                            }
                        }
                         

                        bal_label.setText("Balance: \u00A3"+String.format("%.2f",bal));
                        //
                        
                    }
                    
                    
                    
                    break;
                case "TRANSFER":
                    
                    String input;
                    int accnum=0,transindex=-1;
                    double transbal;
                    boolean accnumValid;
                    
                    totaltrans=Double.parseDouble(dataobj.dailytrans_table.getValueAt(accnumIndex, 3).toString());
                    
                    
                    if(totaltrans+amt>250||totaltrans+convamt>250){
                        JOptionPane.showMessageDialog(this,"The maximum daily transaction limit is \u00A3250");
                    }
                    else{
                        do{
                            accnumValid=true;
                            transindex=-1;
                            input=JOptionPane.showInputDialog(this,"Enter account number to transfer to: ");
                            
                            try{
                                if(input.length()!=6){
                                    JOptionPane.showMessageDialog(this,"Must be 6 digits");
                                    accnumValid=false;

                                }
                                else{
                                    try{
                                        accnum=Integer.parseInt(input);
                                        for(int i=0;i<dataobj.details_table.getRowCount();i++){
                                            if(input.equals(dataobj.details_table.getValueAt(i,1).toString())){
                                                transindex=i;
                                                break;
                                            }
                                        }
                                        if(transindex==-1){
                                            JOptionPane.showMessageDialog(this,"Account Number not found");
                                            accnumValid=false;
                                        }
                                        else if(transindex==accnumIndex){
                                            JOptionPane.showMessageDialog(this,"Cannot transfer money to yourself!");
                                            accnumValid=false;
                                        }
                                    }
                                    catch(Exception e){
                                        JOptionPane.showMessageDialog(this,"Must be numeric");
                                        accnumValid=false;
                                    }
                                }
                            }
                            catch(Exception e){
                                return;
                            }


                        }while(accnumValid==false);

                        //Initializes balances
                        transbal=Double.parseDouble(dataobj.details_table.getValueAt(transindex,4).toString());
                        bal=Double.parseDouble(dataobj.details_table.getValueAt(accnumIndex, 4).toString());

                        //Checks if amount entered is greater than balance
                        if(amt>bal){
                            JOptionPane.showMessageDialog(this,"Invalid Input: Not enough balance!");
                        }
                        else{
                            //Update Balances
                            if(isEuro){
                                bal-=convamt;
                                transbal+=convamt;
                            }
                            else{
                                bal-=amt;
                                transbal+=amt;
                            }
                            
                            JOptionPane.showMessageDialog(this, "Transaction Successful!");
                            
                            
                            if(isEuro)totaltrans+=convamt;
                            else totaltrans+=amt;



                            //Update Tables
                            dataobj.details_table.setValueAt(bal, accnumIndex, 4);
                            dataobj.details_table.setValueAt(transbal, transindex, 4);
                            
                            if(isEuro){
                                dataobj.totaltrans_table.setValueAt(Double.parseDouble(dataobj.totaltrans_table.getValueAt(accnumIndex,3).toString())+convamt, accnumIndex, 3);
                                dataobj.totaltrans_table.setValueAt(Double.parseDouble(dataobj.totaltrans_table.getValueAt(transindex,4).toString())+convamt, transindex, 4);
                                dataobj.dailytrans_table.setValueAt(totaltrans, accnumIndex, 3);
                                dataobj.dailytrans_table.setValueAt(totaltrans, transindex, 4);
                            }
                            else{
                                dataobj.totaltrans_table.setValueAt(Double.parseDouble(dataobj.totaltrans_table.getValueAt(accnumIndex,3).toString())+amt, accnumIndex, 3);
                                dataobj.totaltrans_table.setValueAt(Double.parseDouble(dataobj.totaltrans_table.getValueAt(transindex,4).toString())+amt, transindex, 4);
                                dataobj.dailytrans_table.setValueAt(totaltrans, accnumIndex, 3);
                                dataobj.dailytrans_table.setValueAt(totaltrans, transindex, 4);
                            }
                            
                            //Ask for receipt
                            if(JOptionPane.showConfirmDialog(this, "Would you like a receipt?", "Receipt Confirmation", JOptionPane.YES_NO_OPTION)==0){
                                if(isEuro){
                                    CreateReceipt(convamt,transindex);
                                }
                                else{
                                    CreateReceipt(amt,transindex);
                                }
                            }

                            bal_label.setText("Balance: \u00A3"+String.format("%.2f",bal));//Update Balance Display

                            
                            
                        }
                    }
                    

                    
                    
                    break;   
            }
            amt_field.setText("");
            currency_combo.setSelectedIndex(0);
            button_panel.setVisible(false);
            dataobj.ExportDatabase();
            
        }
    }//GEN-LAST:event_confirmamt_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton amount_button1;
    private javax.swing.JButton amount_button2;
    private javax.swing.JButton amount_button3;
    private javax.swing.JButton amount_button4;
    private javax.swing.JButton amount_button5;
    private javax.swing.JButton amount_button6;
    private javax.swing.JTextField amt_field;
    private javax.swing.JLabel atm_image;
    private javax.swing.JPanel atm_panel;
    private javax.swing.JPanel atmscreen_panel;
    public javax.swing.JLabel bal_label;
    private javax.swing.JPanel body_panel;
    private javax.swing.JPanel button_panel;
    private javax.swing.JButton confirmamt_button;
    private javax.swing.JComboBox<String> currency_combo;
    private javax.swing.JButton deposit_button;
    private javax.swing.JButton exit_button;
    public javax.swing.JLabel header_label;
    private javax.swing.JPanel header_panel;
    private javax.swing.JProgressBar loading_bar;
    private javax.swing.JLabel loading_label;
    private javax.swing.JLabel logo_label;
    private javax.swing.JLabel subheader_label;
    private javax.swing.JLabel transType_label;
    private javax.swing.JButton transfer_button;
    private javax.swing.JButton withdraw_button;
    // End of variables declaration//GEN-END:variables
}
